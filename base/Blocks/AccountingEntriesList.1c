Функция accounting_entries_list_items(context, block_context)
	Результат = Новый Массив;
	Если block_context.page = 0 тогда
		Запрос = Новый Запрос;
	    Запрос.Текст =
	        "ВЫБРАТЬ
	        |   ХозрасчетныйДвиженияССубконто.Период КАК Период,
	        |   ХозрасчетныйДвиженияССубконто.Организация,
	        |   ХозрасчетныйДвиженияССубконто.Регистратор,
	        |   ХозрасчетныйДвиженияССубконто.СчетДт.КодБыстрогоВыбора КАК СчетДт,
	        |   ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	        |   ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	        |   ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	        |   ХозрасчетныйДвиженияССубконто.СчетКт.КодБыстрогоВыбора КАК СчетКт,
	        |   ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	        |   ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	        |   ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	        |   ХозрасчетныйДвиженияССубконто.Сумма
	        |ИЗ
	        |   РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	        |       &ДатаНач,
	        |       &ДатаКнц,
	        |       Активность = Истина И Организация = &Организация
			|   ) КАК ХозрасчетныйДвиженияССубконто
			|ГДЕ
			|   ХозрасчетныйДвиженияССубконто.Сумма <> 0
			|УПОРЯДОЧИТЬ ПО
			|   Период Возр,
			|   Регистратор
			|";
	 	
		Запрос.УстановитьПараметр("ДатаНач", block_context.filter["dateStart"]);
		Запрос.УстановитьПараметр("ДатаКнц", КонецДня(block_context.filter["dateEnd"]));
		ИмяСправочникаОрганизаций = Сред(block_context.filter["organization"]["ИмяИС"], Найти(block_context.filter["organization"]["ИмяИС"], ".")+1);
		Организация = Справочники[ИмяСправочникаОрганизаций].ПолучитьСсылку(Новый УникальныйИдентификатор(block_context.filter["organization"]["ИдИС"]));
		Запрос.УстановитьПараметр("Организация", Организация);
		РезультатЗапроса = Запрос.Выполнить();
	    Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			Проводки = Новый Массив;
			Пока Выборка.Следующий() Цикл
				ПроводкаДебет = Новый Структура("КодСчета,Аналитика1ИС,Аналитика2ИС,Аналитика3ИС", Выборка.СчетДт,Выборка.СубконтоДт1,Выборка.СубконтоДт2,Выборка.СубконтоДт3);
				ПроводкаКредит = Новый Структура("КодСчета,Аналитика1ИС,Аналитика2ИС,Аналитика3ИС", Выборка.СчетКт,Выборка.СубконтоКт1,Выборка.СубконтоКт2,Выборка.СубконтоКт3);
				Проводки.Добавить(Новый Структура("Дебет,Кредит,Сумма,Дата", ПроводкаДебет, ПроводкаКредит, Выборка.Сумма, Формат(Выборка.Период, "ДФ=dd.MM.yyyy")));			
			КонецЦикла; 
			ТипЗначения = ТипЗнч(Выборка.Регистратор);
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);
			ini_name = ОбъектМетаданных.Имя;
			Попытка
				Load_ini(ini_name+"_read");
				ИмяСБИС = Неопределено;
			Исключение
				ini_name = "БухгалтерскаяСправка";
				ИмяСБИС = "БухгалтерскаяСправка" 
			КонецПопытки;
			Результат.Добавить(Новый Структура("Название, Дата, Номер, ПроводкиСырые, Проводки, ИдИС, ИмяИС, ТипИС, ИмяСБИС, НашаОрганизация, ini_name", Строка(Выборка.Регистратор), Формат(Выборка.Регистратор.Дата,"ДФ=dd.MM.yyyy"), Выборка.Регистратор.Номер, Проводки, Новый Массив, XMLСтрока(Выборка.Регистратор.УникальныйИдентификатор()), ОбъектМетаданных.Имя, "Документы", ИмяСБИС, Новый Структура("ИдИС, ИмяИС, ИмяСБИС", XMLСтрока(Организация.УникальныйИдентификатор()), block_context.filter["organization"]["ИмяИС"], "НашаОрганизация"), ini_name ));
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
	
КонецФункции
