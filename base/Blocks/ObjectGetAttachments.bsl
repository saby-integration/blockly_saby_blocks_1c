
// Возвращает записи присоединенных файлов объекта в зависимости от типа.
//
// Параметры:
//  block_context                - Контекст исполняемого блока.
//  ТипФайлов                    - строка = определяет тип возвращаемых данных.
//                               = "Файлы" - возвращаем прикрепленные файлы.
//                               = "ФайлыЭДО" - возвращаем прикрепленные файлы ЭДО.
//
// Возвращаемое значение:
//  Массив                       - массив с присоединенными файлами.
//                                 состав полей смотреть в описании соответствующих функций:
//                                   ПрикрепленныеФайлыКОбъекту()
//                                   ПрикрепленныеФайлыЭДОКОбъекту()
//
Функция ПрикрепленныеФайлыПоТипу(block_context, ТипФайлов = "")
	
	Результат = Новый Массив;
	
	// Доп.параметры
	ИменаФайлов = get_prop(block_context, "NAMES", Неопределено);
	ИзмененныеПосле = get_prop(block_context, "CHANGED_AFTER", Неопределено);
	НужныДвоичныеДанные = get_prop(block_context, "RECEIVING_BINARY_DATA", Неопределено);
	
	МассивСсылок = Новый Массив;
	Если ТипФайлов = "Файлы" Тогда
		МассивСсылок = ПрикрепленныеФайлыКОбъекту(block_context.OBJECT, ИменаФайлов, ИзмененныеПосле);
	ИначеЕсли ТипФайлов = "ФайлыЭДО" Тогда
		МассивСсылок = ПрикрепленныеФайлыЭДОКОбъекту(block_context.OBJECT, ИменаФайлов, ИзмененныеПосле);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МассивСсылок) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого ПрикрепленныйФайл Из МассивСсылок Цикл
		ИмяФайла = ПрикрепленныйФайл.Наименование;
		ТипСправочника = ТипЗнч(ПрикрепленныйФайл);
		ИмяСправочника = Метаданные.НайтиПоТипу(ТипСправочника).Имя;
		Если Метаданные.Справочники[ИмяСправочника].Реквизиты.Найти("Расширение") <> Неопределено Тогда
			Если ЗначениеЗаполнено(ПрикрепленныйФайл["Расширение"]) Тогда
				ИмяФайла = ИмяФайла + "." + ПрикрепленныйФайл["Расширение"];
			КонецЕсли;	
		ИначеЕсли Метаданные.Справочники[ИмяСправочника].Реквизиты.Найти("ТекущаяВерсияРасширение") <> Неопределено Тогда
			Если ЗначениеЗаполнено(ПрикрепленныйФайл["ТекущаяВерсияРасширение"]) Тогда
				ИмяФайла = ИмяФайла + "." + ПрикрепленныйФайл["ТекущаяВерсияРасширение"];
			КонецЕсли;	
		КонецЕсли;
		ТипКонтента = ПолучитьКонтентТипВложения(ИмяФайла);
		
		ФайлBase64  = Неопределено;
		Если НужныДвоичныеДанные = "TRUE" Тогда
			ФайлДД = ПолучитьДвоичныеДанныеПрикрепленногоФайла(ПрикрепленныйФайл.Ссылка);
			ФайлBase64 = Base64Строка(ФайлДД); // Если нужны двоичные данные
		КонецЕсли;
		
		Файл = Новый Соответствие;
		Вложение = Новый Соответствие;
		Вложение.Вставить("Файл", Файл);
	    ВставитьСвойствоЕслиНет(Вложение["Файл"], "Имя", ИмяФайла);
	    ВставитьСвойствоЕслиНет(Вложение["Файл"], "ДвоичныеДанные", ФайлBase64);
	    ВставитьСвойствоЕслиНет(Вложение["Файл"], "ContentType", ТипКонтента);
		
		Результат.Добавить(Вложение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

//DynamicDirective
Функция block_object_get_attachments_calc_value(block_type, node, path, context, block_context)
	
	Возврат ПрикрепленныеФайлыПоТипу(block_context, "Файлы");
	
КонецФункции

