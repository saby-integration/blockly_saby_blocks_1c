Функция block_list_obj_group_calc_value(block_type, node, path, context, block_context)
	ГруппируемыйСписок = block_context["LIST"];
	ПолеГруппировки = block_context["PARAMS"];
	РезультатСписокИтого = Новый СписокЗначений();
	Если ТипЗнч(ПолеГруппировки) = Тип("Строка") Тогда
		РезультатСтруктура = Новый Соответствие();
		Для Каждого ЭлементИсходногоСписка Из ГруппируемыйСписок Цикл
			ЗначениеЭлементаИсходногоСписка = ЭлементИсходногоСписка[ПолеГруппировки];
			Если РезультатСтруктура.Получить(ЗначениеЭлементаИсходногоСписка) = Неопределено Тогда
				Выборка = Новый СписокЗначений();
				Выборка.Добавить(ЭлементИсходногоСписка);
				РезультатСтруктура.Вставить(ЗначениеЭлементаИсходногоСписка, Выборка); 
			Иначе
				РезультатСтруктура[ЗначениеЭлементаИсходногоСписка].Добавить(ЭлементИсходногоСписка);
			КонецЕсли;	
		КонецЦикла;	
	ИначеЕсли ТипЗнч(ПолеГруппировки) = Тип("Массив") Тогда
		ВсеВариантыЗначенийРеквизитов = Новый СписокЗначений();	  
		Для Каждого ЭлементИсходногоСписка Из ГруппируемыйСписок Цикл
			ЗначенияРеквизитовТекущегоЭлемента = Новый Соответствие();
			Для Каждого РеквизитГруппировки Из ПолеГруппировки Цикл
				ЗначениеЭлементаИсходногоСписка = ЭлементИсходногоСписка[РеквизитГруппировки];
				ЗначенияРеквизитовТекущегоЭлемента.Вставить(РеквизитГруппировки, ЗначениеЭлементаИсходногоСписка);
			КонецЦикла;
			Если ВсеВариантыЗначенийРеквизитов.Количество() = 0 Тогда
				ВсеВариантыЗначенийРеквизитов.Добавить(ЗначенияРеквизитовТекущегоЭлемента);
			Иначе
				ВариантЗначенийУчтен = Ложь;
				Для Каждого ВариантЗначения Из ВсеВариантыЗначенийРеквизитов Цикл	
					ЗначенияСовпадают = Истина;
					Для Каждого РеквизитГруппировки Из ПолеГруппировки Цикл
						Если ВариантЗначения.Значение.Получить(РеквизитГруппировки) = ЗначенияРеквизитовТекущегоЭлемента.Получить(РеквизитГруппировки) Тогда
							Если НЕ ЗначенияСовпадают Тогда
								ЗначенияСовпадают = Ложь;
							Иначе		
								ЗначенияСовпадают = Истина;
							КонецЕсли;
						Иначе
							ЗначенияСовпадают = Ложь;	
						КонецЕсли;	
					КонецЦикла;
					Если ЗначенияСовпадают Тогда
						ВариантЗначенийУчтен = Истина;
					КонецЕсли;	
				КонецЦикла;
				Если НЕ ВариантЗначенийУчтен Тогда
					ВсеВариантыЗначенийРеквизитов.Добавить(ЗначенияРеквизитовТекущегоЭлемента);
				КонецЕсли;                                                                       
			КонецЕсли;
		КонецЦикла;
		РезультатСтруктура = Новый Соответствие();
		Для Каждого ЭлементИсходногоСписка Из ГруппируемыйСписок Цикл
			Для Каждого ВариантЗначения Из ВсеВариантыЗначенийРеквизитов Цикл
				ВариантСовпадает = Истина;
				Для Каждого РеквизитГруппировки Из ПолеГруппировки Цикл
					Если ЭлементИсходногоСписка[РеквизитГруппировки] = ВариантЗначения.Значение.Получить(РеквизитГруппировки) Тогда
						Если НЕ ВариантСовпадает Тогда
							ВариантСовпадает = Ложь;
						Иначе		
							ВариантСовпадает = Истина;
						КонецЕсли;
					Иначе
						ВариантСовпадает = Ложь;		
					КонецЕсли;
				КонецЦикла;
				Если ВариантСовпадает Тогда
					Если РезультатСтруктура.Получить(ВариантЗначения) = Неопределено Тогда
						Выборка = Новый СписокЗначений();
						Выборка.Добавить(ЭлементИсходногоСписка);
						РезультатСтруктура.Вставить(ВариантЗначения, Выборка); 
					Иначе
						РезультатСтруктура[ВариантЗначения].Добавить(ЭлементИсходногоСписка);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;			
	Иначе
		Ошибка = "Неправильный тип группировки"
	КонецЕсли;
	Для Каждого Элемент Из РезультатСтруктура Цикл
		РезультатСписок = Новый СписокЗначений();
		Для Каждого ЭлементСтруктуры Из Элемент.Значение Цикл
			РезультатСписок.Добавить(ЭлементСтруктуры);
		КонецЦикла;
		РезультатСписокИтого.Добавить(РезультатСписок);
	КонецЦикла;
	Возврат РезультатСписокИтого;
КонецФункции	
